
local WEBHOOK_URL = "https://discord.com/api/webhooks/1412683240493416500/U-zUIMAHJcZ1bm-vlOBytD3DmmNvxVWQf8E_6J7Ci8fCRtDsb9q1btEsUY376zCl8BEQ" -- <-- put your Discord webhook here

-- Staff ranks (UserIds -> Rank)
local STAFF = {
    [1684796047] = "Owner",
    [1263549901] = "CoOwner",
    [1970492428] = "Admin",
    [5476508628] = "Mod",
}

-- Allowed commands per rank
local PERMS = {
    Owner   = {"kick","ban","unban","mute","unmute","freeze","unfreeze","pm","tp","goto","bring","heal","kill","speed","jump","fly","nofly","announce","cmds","tag","shutdown","sc"},
    CoOwner = {"kick","ban","unban","mute","unmute","freeze","unfreeze","pm","tp","goto","bring","heal","kill","speed","jump","fly","nofly","announce","cmds","tag","shutdown","sc"},
    Admin   = {"kick","ban","unban","mute","unmute","freeze","unfreeze","pm","tp","goto","bring","heal","kill","speed","jump","fly","nofly","announce","cmds","tag","sc"},
    Mod     = {"kick","mute","unmute","freeze","unfreeze","pm","tp","goto","bring","heal","kill","speed","jump","fly","nofly","cmds","tag","sc"},
}

-- Rank logos (Billboard head tag)
local RANK_LOGO = {
    Owner   = "rbxassetid://18690083416", -- REPLACE
    CoOwner = "rbxassetid://18690083416", -- REPLACE
    Admin   = "rbxassetid://18690119898", -- REPLACE
    Mod     = "rbxassetid://18690127899", -- REPLACE
    Default = "rbxassetid://18690127899", -- REPLACE (fallback)
}

-- Cooldowns per command (seconds)
local COOLDOWN = {
    kick=2, ban=2, unban=2, mute=2, unmute=2, freeze=1, unfreeze=1,
    pm=1, tp=1, goto=1, bring=1, heal=1, kill=1, speed=1, jump=1,
    fly=1, nofly=1, announce=5, cmds=1, tag=1, shutdown=5, sc=1
}

--======================
--  SERVICES
--======================
local Players            = game:GetService("Players")
local DataStoreService   = game:GetService("DataStoreService")
local HttpService        = game:GetService("HttpService")
local RunService         = game:GetService("RunService")

local BanStore = DataStoreService:GetDataStore("MegaStaff_Bans")

--======================
--  HELPERS
--======================

local function getRank(userId)
    return STAFF[userId] or "Member"
end

local function hasPerm(rank, command)
    local list = PERMS[rank]
    if not list then return false end
    for _,c in ipairs(list) do
        if c == command then return true end
    end
    return false
end

-- find by UserId or partial Name
local function findPlayer(identifier)
    if not identifier or identifier == "" then return nil end
    local asNum = tonumber(identifier)
    if asNum then
        for _,p in ipairs(Players:GetPlayers()) do
            if p.UserId == asNum then return p end
        end
    end
    local lower = string.lower(identifier)
    for _,p in ipairs(Players:GetPlayers()) do
        if string.sub(string.lower(p.Name),1,#lower) == lower then
            return p
        end
    end
    return nil
end

local function logDiscord(msg)
    if not WEBHOOK_URL or WEBHOOK_URL == "" then return end
    pcall(function()
        HttpService:PostAsync(
            WEBHOOK_URL,
            HttpService:JSONEncode({content = msg}),
            Enum.HttpContentType.ApplicationJson
        )
    end)
end

-- private toast for ONE player
local function privateToast(player, text, seconds)
    seconds = seconds or 4
    local gui = Instance.new("ScreenGui")
    gui.Name = "StaffToast"
    gui.ResetOnSpawn = false
    gui.Parent = player:WaitForChild("PlayerGui")

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.5,0,0.07,0)
    label.Position = UDim2.new(0.25,0,0.05,0)
    label.BackgroundColor3 = Color3.fromRGB(25,25,25)
    label.BackgroundTransparency = 0.2
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255,255,200)
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.Parent = gui

    game:GetService("Debris"):AddItem(gui, seconds)
end

-- alert many staff
local function staffBroadcast(text)
    for _,plr in ipairs(Players:GetPlayers()) do
        if getRank(plr.UserId) ~= "Member" then
            privateToast(plr, text, 6)
        end
    end
end

--======================
--  HEADE TAGS
--======================
local function applyHeadTag(player, rank)
    local char = player.Character
    if not char then return end
    local head = char:FindFirstChild("Head")
    if not head then return end

    local staffData = player:FindFirstChild("StaffData")
    if staffData and staffData:FindFirstChild("TagEnabled") and not staffData.TagEnabled.Value then
        -- toggled off
        if head:FindFirstChild("StaffTag") then head.StaffTag:Destroy() end
        return
    end

    if head:FindFirstChild("StaffTag") then head.StaffTag:Destroy() end

    local bb = Instance.new("BillboardGui")
    bb.Name = "StaffTag"
    bb.Parent = head
    bb.Adornee = head
    bb.Size = UDim2.new(0,100,0,120)
    bb.StudsOffset = Vector3.new(0,2.5,0)
    bb.AlwaysOnTop = true

    local img = Instance.new("ImageLabel")
    img.BackgroundTransparency = 1
    img.Size = UDim2.new(0,60,0,60)
    img.Position = UDim2.new(0.5,-30,0,0)
    img.Image = RANK_LOGO[rank] or RANK_LOGO.Default
    img.Parent = bb

    local txt = Instance.new("TextLabel")
    txt.BackgroundTransparency = 1
    txt.Size = UDim2.new(1,0,0,32)
    txt.Position = UDim2.new(0,0,0,66)
    txt.Text = rank
    txt.TextScaled = true
    txt.Font = Enum.Font.SourceSansBold
    txt.TextColor3 = Color3.fromRGB(255,255,255)
    txt.TextStrokeTransparency = 0.2
    txt.Parent = bb
end

--======================
--  SIMPLE FLY (server-side)
--  (noclip + hover assist; not key-controlled)
--======================
local activeFly = {} -- [UserId] = {conn = RBXScriptConnection}

local function setNoclip(char, on)
    for _,v in ipairs(char:GetDescendants()) do
        if v:IsA("BasePart") then
            v.CanCollide = not on
        end
    end
end

local function startFly(player)
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hrp or not hum then return end

    setNoclip(char, true)
    hum.PlatformStand = false

    -- Hover with VectorForce to counter gravity
    local rootAtt = hrp:FindFirstChild("FlyAttachment") or Instance.new("Attachment", hrp)
    rootAtt.Name = "FlyAttachment"
    local vf = hrp:FindFirstChild("FlyForce") or Instance.new("VectorForce", hrp)
    vf.Name = "FlyForce"
    vf.Attachment0 = rootAtt
    vf.Force = Vector3.new(0, workspace.Gravity * hum:GetMass(), 0)

    -- Keep noclip enforced
    if activeFly[player.UserId] and activeFly[player.UserId].conn then
        activeFly[player.UserId].conn:Disconnect()
    end
    local conn = RunService.Stepped:Connect(function()
        if player.Character ~= char then return end
        setNoclip(char, true)
    end)
    activeFly[player.UserId] = {conn = conn}
end

local function stopFly(player)
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if hrp then
        local vf = hrp:FindFirstChild("FlyForce")
        if vf then vf:Destroy() end
        local at = hrp:FindFirstChild("FlyAttachment")
        if at then at:Destroy() end
    end
    setNoclip(char, false)
    if activeFly[player.UserId] and activeFly[player.UserId].conn then
        activeFly[player.UserId].conn:Disconnect()
    end
    activeFly[player.UserId] = nil
end

--======================
--  CMD COOLDOWNS
--======================
local lastUse = {} -- lastUse[userId][cmd] = tick()

local function useAllowed(userId, cmd)
    local now = os.clock()
    lastUse[userId] = lastUse[userId] or {}
    local t = lastUse[userId][cmd] or 0
    local cd = COOLDOWN[cmd] or 0
    if now - t >= cd then
        lastUse[userId][cmd] = now
        return true
    else
        return false, math.max(0, cd - (now - t))
    end
end

--======================
--  COMMANDS
--======================
local function handleCommand(player, raw)
    local rank = getRank(player.UserId)
    local args = string.split(raw, " ")
    local head = args[1] or ""

    -- Staff chat (supports /sc or !sc)
    if string.lower(head) == "/sc" or string.lower(head) == "!sc" then
        if not hasPerm(rank, "sc") then return end
        local ok, waitLeft = useAllowed(player.UserId, "sc")
        if not ok then privateToast(player, ("Cooldown: %.1fs"):format(waitLeft), 2) return end
        local msg = table.concat(args, " ", 2)
        staffBroadcast(("[%s] %s: %s"):format(rank, player.Name, msg))
        logDiscord(("🟣 [StaffChat] [%s] %s (%d): %s"):format(rank, player.Name, player.UserId, msg))
        return
    end

    -- Member help ping
    if string.lower(head) == "!help" or string.lower(head) == "!mod" then
        staffBroadcast(("🚨 %s needs assistance!"):format(player.Name))
        logDiscord(("🚨 Help request from **%s** (UserId %d)"):format(player.Name, player.UserId))
        return
    end

    -- Normal staff commands begin with ":"
    if string.sub(head,1,1) ~= ":" and string.lower(head) ~= "/tag" then return end
    local cmd = string.lower(string.sub(head, 2)) -- without ":"
    if string.lower(head) == "/tag" then cmd = "tag" end

    if not hasPerm(rank, cmd) then
        privateToast(player, "You don't have permission for :"..cmd, 3)
        return
    end

    local ok, waitLeft = useAllowed(player.UserId, cmd)
    if not ok then privateToast(player, ("Cooldown: %.1fs"):format(waitLeft), 2) return end

    -- helper: get reason / text after target
    local function tailText(fromIndex)
        return table.concat(args, " ", fromIndex)
    end

    -- Execute commands
    if cmd == "kick" then
        local target = findPlayer(args[2])
        local reason = tailText(3)
        if target then
            target:Kick(reason ~= "" and ("Kicked: "..reason) or "Kicked by staff.")
            privateToast(player, "Kicked "..target.Name, 3)
            logDiscord(("👢 %s [%s] kicked %s (%d) | Reason: %s")
                :format(player.Name, rank, target.Name, target.UserId, reason ~= "" and reason or "N/A"))
        end

    elseif cmd == "ban" then
        local target = findPlayer(args[2])
        local reason = tailText(3)
        if target then
            pcall(function() BanStore:SetAsync(target.UserId, true) end)
            target:Kick(reason ~= "" and ("Banned: "..reason) or "You are banned.")
            privateToast(player, "Banned "..target.Name, 3)
            logDiscord(("🔨 %s [%s] banned %s (%d) | Reason: %s")
                :format(player.Name, rank, target.Name, target.UserId, reason ~= "" and reason or "N/A"))
        end

    elseif cmd == "unban" then
        local id = tonumber(args[2])
        if id then
            pcall(function() BanStore:RemoveAsync(id) end)
            privateToast(player, "Unbanned UserId "..id, 3)
            logDiscord(("✅ %s [%s] unbanned UserId %d"):format(player.Name, rank, id))
        end

    elseif cmd == "mute" then
        local target = findPlayer(args[2])
        if target and not target:FindFirstChild("Muted") then
            Instance.new("BoolValue", target).Name = "Muted"
            privateToast(player, "Muted "..target.Name, 3)
            privateToast(target, "You are muted by staff.", 4)
            logDiscord(("🔇 %s [%s] muted %s (%d)"):format(player.Name, rank, target.Name, target.UserId))
        end

    elseif cmd == "unmute" then
        local target = findPlayer(args[2])
        if target and target:FindFirstChild("Muted") then
            target.Muted:Destroy()
            privateToast(player, "Unmuted "..target.Name, 3)
            privateToast(target, "You are unmuted.", 3)
            logDiscord(("🔈 %s [%s] unmuted %s (%d)"):format(player.Name, rank, target.Name, target.UserId))
        end
        -- NOTE: True chat suppression requires TextChatService callbacks; this script shows a soft-mute notice.

    elseif cmd == "freeze" then
        local target = findPlayer(args[2])
        if target and target.Character then
            for _,bp in ipairs(target.Character:GetDescendants()) do
                if bp:IsA("BasePart") then bp.Anchored = true end
            end
            privateToast(player, "Froze "..target.Name, 3)
            logDiscord(("🧊 %s [%s] froze %s (%d)"):format(player.Name, rank, target.Name, target.UserId))
        end

    elseif cmd == "unfreeze" then
        local target = findPlayer(args[2])
        if target and target.Character then
            for _,bp in ipairs(target.Character:GetDescendants()) do
                if bp:IsA("BasePart") then bp.Anchored = false end
            end
            privateToast(player, "Unfroze "..target.Name, 3)
            logDiscord(("🔥 %s [%s] unfroze %s (%d)"):format(player.Name, rank, target.Name, target.UserId))
        end

    elseif cmd == "pm" then
        local target = findPlayer(args[2])
        local message = tailText(3)
        if target and message ~= "" then
            privateToast(target, ("[PM from %s] %s"):format(player.Name, message), 6)
            privateToast(player, ("[PM to %s] %s"):format(target.Name, message), 4)
            logDiscord(("✉️ %s [%s] PM -> %s (%d): %s")
                :format(player.Name, rank, target.Name, target.UserId, message))
        end

    elseif cmd == "tp" or cmd == "goto" then
        local target = findPlayer(args[2])
        if target and player.Character and target.Character then
            local troot = target.Character:FindFirstChild("HumanoidRootPart")
            if troot then
                player.Character:MoveTo(troot.Position + Vector3.new(2,0,0))
                privateToast(player, "Teleported to "..target.Name, 2)
            end
        end

    elseif cmd == "bring" then
        local target = findPlayer(args[2])
        if target and player.Character and target.Character then
            local proot = player.Character:FindFirstChild("HumanoidRootPart")
            if proot then
                target.Character:MoveTo(proot.Position + Vector3.new(2,0,0))
                privateToast(player, "Brought "..target.Name, 2)
            end
        end

    elseif cmd == "heal" then
        local target = findPlayer(args[2]) or player
        if target and target.Character then
            local hum = target.Character:FindFirstChildOfClass("Humanoid")
            if hum then hum.Health = hum.MaxHealth end
            privateToast(player, "Healed "..target.Name, 2)
        end

    elseif cmd == "kill" then
        local target = findPlayer(args[2]) or player
        if target and target.Character then
            local hum = target.Character:FindFirstChildOfClass("Humanoid")
            if hum then hum.Health = 0 end
            privateToast(player, "Killed "..target.Name, 2)
        end

    elseif cmd == "speed" then
        local target = findPlayer(args[2]) or player
        local amount = tonumber(args[3]) or 16
        if target and target.Character then
            local hum = target.Character:FindFirstChildOfClass("Humanoid")
            if hum then hum.WalkSpeed = amount end
            privateToast(player, ("Set %s speed to %d"):format(target.Name, amount), 2)
        end

    elseif cmd == "jump" then
        local target = findPlayer(args[2]) or player
        local amount = tonumber(args[3]) or 50
        if target and target.Character then
            local hum = target.Character:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.UseJumpPower = true
                hum.JumpPower = amount
            end
            privateToast(player, ("Set %s jump to %d"):format(target.Name, amount), 2)
        end

    elseif cmd == "fly" then
        local target = findPlayer(args[2]) or player
        if target then
            startFly(target)
            privateToast(player, "Fly ON for "..target.Name, 2)
        end

    elseif cmd == "nofly" then
        local target = findPlayer(args[2]) or player
        if target then
            stopFly(target)
            privateToast(player, "Fly OFF for "..target.Name, 2)
        end

    elseif cmd == "announce" then
        local message = table.concat(args, " ", 2)
        if message ~= "" then
            for _,plr in ipairs(Players:GetPlayers()) do
                privateToast(plr, "📢 "..message, 6)
            end
            logDiscord(("📢 Announcement by %s [%s]: %s"):format(player.Name, rank, message))
        end

    elseif cmd == "cmds" then
        -- Build list specific to their rank
        local list = {}
        for _,c in ipairs(PERMS[rank] or {}) do table.insert(list, ":"..c) end

        -- GUI
        local gui = player.PlayerGui:FindFirstChild("CmdsGUI")
        if gui then gui:Destroy() end
        gui = Instance.new("ScreenGui")
        gui.Name = "CmdsGUI"
        gui.ResetOnSpawn = false
        gui.Parent = player:WaitForChild("PlayerGui")

        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0.4,0,0.5,0)
        frame.Position = UDim2.new(0.3,0,0.25,0)
        frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
        frame.Parent = gui

        local title = Instance.new("TextLabel")
        title.BackgroundTransparency = 1
        title.Size = UDim2.new(1,0,0.15,0)
        title.Text = "📜 Your Commands"
        title.TextScaled = true
        title.Font = Enum.Font.SourceSansBold
        title.TextColor3 = Color3.fromRGB(255,255,255)
        title.Parent = frame

        local scroll = Instance.new("ScrollingFrame")
        scroll.Size = UDim2.new(1,-12,0.78,0)
        scroll.Position = UDim2.new(0,6,0.18,0)
        scroll.CanvasSize = UDim2.new(0,0,0, (#list*32)+10)
        scroll.BackgroundTransparency = 1
        scroll.ScrollBarThickness = 6
        scroll.Parent = frame

        for i,txt in ipairs(list) do
            local l = Instance.new("TextLabel")
            l.BackgroundTransparency = 1
            l.Size = UDim2.new(1,-10,0,28)
            l.Position = UDim2.new(0,5,0,(i-1)*30)
            l.Text = "• "..txt
            l.TextScaled = true
            l.TextXAlignment = Enum.TextXAlignment.Left
            l.Font = Enum.Font.SourceSans
            l.TextColor3 = Color3.fromRGB(220,220,220)
            l.Parent = scroll
        end

        local close = Instance.new("TextButton")
        close.Size = UDim2.new(1,0,0.08,0)
        close.Position = UDim2.new(0,0,0.92,0)
        close.Text = "Close"
        close.BackgroundColor3 = Color3.fromRGB(60,60,60)
        close.TextColor3 = Color3.fromRGB(255,255,255)
        close.Parent = frame
        close.MouseButton1Click:Connect(function() gui:Destroy() end)

    elseif cmd == "tag" then
        local staffData = player:FindFirstChild("StaffData")
        if staffData and staffData:FindFirstChild("TagEnabled") then
            staffData.TagEnabled.Value = not staffData.TagEnabled.Value
            if staffData.TagEnabled.Value then
                applyHeadTag(player, rank)
            else
                if player.Character and player.Character:FindFirstChild("Head") then
                    local head = player.Character.Head
                    if head:FindFirstChild("StaffTag") then head.StaffTag:Destroy() end
                end
            end
            privateToast(player, "[Staff] HeadTag is now "..(staffData.TagEnabled.Value and "ON ✅" or "OFF ❌"), 3)
        end

    elseif cmd == "shutdown" then
        for _,plr in ipairs(Players:GetPlayers()) do
            plr:Kick("Server is shutting down by staff.")
        end
        logDiscord(("⛔ Shutdown by %s [%s]"):format(player.Name, rank))
    end
end

--======================
--  PLAYER JOIN
--======================
Players.PlayerAdded:Connect(function(player)
    -- ban check
    local banned = false
    pcall(function() banned = BanStore:GetAsync(player.UserId) end)
    if banned then
        player:Kick("You are banned from this experience.")
        return
    end

    -- Staff folder + tag toggle
    local rank = getRank(player.UserId)
    if rank ~= "Member" then
        local staffData = Instance.new("Folder")
        staffData.Name = "StaffData"
        staffData.Parent = player

        local tagEnabled = Instance.new("BoolValue")
        tagEnabled.Name = "TagEnabled"
        tagEnabled.Value = true
        tagEnabled.Parent = staffData
    end

    -- headtag on spawn
    player.CharacterAdded:Connect(function()
        local r = getRank(player.UserId)
        if r ~= "Member" then
            -- stop fly if respawned
            stopFly(player)
            task.delay(0.5, function()
                applyHeadTag(player, r)
            end)
        end
    end)

    -- listen to chat
    player.Chatted:Connect(function(msg)
        -- Soft-mute: notify & ignore custom commands echo
        if player:FindFirstChild("Muted") then
            privateToast(player, "You are muted. Message not sent.", 3)
            -- (Note: true suppression of default chat needs TextChatService hooks.)
            return
        end
        handleCommand(player, msg)
    end)
end)

-- Cleanup fly when players leave
Players.PlayerRemoving:Connect(function(player)
    stopFly(player)
end)
